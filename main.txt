-- 1. Create Database
CREATE DATABASE db_project;
USE db_project;

-- 2. User Table
CREATE TABLE users (
    user_id VARCHAR(10) PRIMARY KEY,
    email VARCHAR(50) NOT NULL,
    password VARCHAR(10) NOT NULL,
    department VARCHAR(15) NOT NULL
);

-- 3. Student Table
CREATE TABLE student (
    user_id VARCHAR(10) PRIMARY KEY,
    reg_no VARCHAR(10) UNIQUE NOT NULL,
    status VARCHAR(10) NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

-- 4. Tech Officer Table
CREATE TABLE tech_officer (
    user_id VARCHAR(10) PRIMARY KEY,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

-- 5. Lecture Table
CREATE TABLE lecture (
    user_id VARCHAR(10) PRIMARY KEY,
    specialization VARCHAR(20),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

-- 6. Dean Table
CREATE TABLE dean (
    lecture_id VARCHAR(10) PRIMARY KEY,
    term_start DATE,
    term_end DATE,
    FOREIGN KEY (lecture_id) REFERENCES lecture(user_id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

-- 7. Marks Table
CREATE TABLE marks (
    marks_id INT AUTO_INCREMENT PRIMARY KEY,
    quiz1_marks DECIMAL(5,2),
    quiz2_marks DECIMAL(5,2),
    quiz3_marks DECIMAL(5,2),
    final_theory DECIMAL(5,2),
    final_practical DECIMAL(5,2),
    final_marks DECIMAL(5,2)
);

-- 8. Course Table
CREATE TABLE course (
    course_id VARCHAR(10) PRIMARY KEY,
    name VARCHAR(25),
    credit INT
);

-- 9. Attendance Table
CREATE TABLE attendance (
    attendance_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id VARCHAR(10),
    course_id VARCHAR(10),
    date DATE,
    status ENUM('Present', 'Absent'),
    medical BOOLEAN,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    FOREIGN KEY (course_id) REFERENCES course(course_id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

-- 10. Result Table
CREATE TABLE result (
    result_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id VARCHAR(10),
    gpa DECIMAL(3,2),
    sgpa DECIMAL(3,2),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

-- 11. Student-Course Mapping
CREATE TABLE student_course (
    user_id VARCHAR(10),
    course_id VARCHAR(10),
    PRIMARY KEY (user_id, course_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    FOREIGN KEY (course_id) REFERENCES course(course_id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

-- 12. Tech Office Phone Numbers (multi-value)
CREATE TABLE tech_office_phone_no (
    user_id VARCHAR(10),
    phone_number VARCHAR(10),
    PRIMARY KEY (user_id, phone_number),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

-- 13. Course-Marks Relationship
CREATE TABLE course_marks (
    course_id VARCHAR(10),
    marks_id INT,
    PRIMARY KEY (course_id, marks_id),
    FOREIGN KEY (course_id) REFERENCES course(course_id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    FOREIGN KEY (marks_id) REFERENCES marks(marks_id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

-- 14. Student-Marks Relationship
CREATE TABLE student_marks (
    user_id VARCHAR(10),
    marks_id INT,
    grade CHAR(1),
    PRIMARY KEY (user_id, marks_id),
    FOREIGN KEY (user_id) REFERENCES student(user_id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    FOREIGN KEY (marks_id) REFERENCES marks(marks_id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

